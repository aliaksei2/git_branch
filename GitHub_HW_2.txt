GIT Homework 1

JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер.-----> $ git clone link
 6. Внутри локального JSON создать файл “new.json”.-----> $ touch new.json
 7. Добавить файл под гит.----->git add .
 8. Закоммитить файл. -----> git commit -m 'add file'
 9. Отправить файл на внешний GitHub репозиторий.-----> git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.------> vim new.json
 11. Отправить изменения на внешний репозиторий.----> $ git commit -am 'add info'---> $ git push
 12. Создать файл preferences.json-------> $ touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.----> $vim preferences.json
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON ------> $ cat > skils.json
 15. Отправить сразу 2 файла на внешний репозиторий.-----> $ git add preferences.json skils.json ---> git commit -m 'add new file' ---> git push
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON ----> $ git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.
 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML



GitHub. HW_2
1. На локальном репозитории сделать ветки для:
- Postman
- Jmeter
- CheckLists
- Bag Reports
- SQL
- Charles
- Mobile testing
$ git branch Postman

2. Запушить все ветки на внешний репозиторий
$ git push origin Postman

3. В ветке Bag Reports сделать текстовый документ со структурой баг репорта
$ cat >> bagreports.txt

4. Запушить структуру багрепорта на внешний репозиторий
$ git commit -am 'add new file'
$ git push -u origin BagReports

5. Вмержить ветку Bag Reports в Main
$ git checkout main
$ git merge BagReports

6. Запушить main на внешний репозиторий.
$ git commit -am 'add fail from bagreports branch'
$ git push

7. В ветке CheckLists набросать структуру чек листа.
$ git checkout CheckLists
$ cat >> checklist.txt

8. Запушить структуру на внешний репозиторий
$ git commit -am 'add new file'
$ git push -u origin CheckLists

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main
Click on the button 'pull request'
10. Синхронизировать Внешнюю и Локальную ветки Main
$ git checkout main
$ git pull

